---
import { Queue } from "bullmq";
import { taskQueue } from "@src/utils/task-queue";

import { getRecordById, deleteRecordById, updateRecord } from "@src/utils/db";

import Layout from "@src/components/Layout.astro";
import Dump from "@src/components/Dump.astro";

const { id } = Astro.params;

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get("action");
  if (action === "delete") {
    const deleted = deleteRecordById("notes", id);
    if (deleted) return Astro.redirect("/notes?status=deleted");
  } else if (action === "process") {
    updateRecord("notes", id, { progress: 0 });
    await taskQueue.add("processNote", { noteId: id });
  }
}

const note = getRecordById("notes", id);
const progress = note.progress;
---

<Layout title={`Note: ${note.title}`}>
  <form method="POST">
    <button name="action" value="delete">Delete</button>
    <button name="action" value="process">Process asynchronously</button>
  </form>

  <p><a href={`/notes/${note.id}/edit`}>Edit</a></p>

  <dl>
    <dt>Title:</dt>
    <dd>{note.title}</dd>

    <dt>Body:</dt>
    <dd>{note.body}</dd>

    <dt>Progress:</dt>
    <dd>
      <progress
        value={progress}
        max="100"
        hx-get={`/notes/${id}/progress`}
        hx-trigger="every 500ms"
        hx-swap="outerHTML"></progress>
    </dd>
  </dl>

  <Dump data={note} />
</Layout>
