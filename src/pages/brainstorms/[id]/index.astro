---
import Layout from "@src/components/Layout.astro";
import {
    createBrainstormMessage,
    updateBrainstormSummary,
    deleteMessageAndNewer,
    deleteBrainstorm,
} from "@src/weaviate/crud";
import { getBrainstormWithMessagesById } from "@src/weaviate/query";
import {
    getNewCoachMessageForBrainstorm,
    generateSummaryForBrainstorm,
    getRelevantContextFromSimilarBrainstormMessages,
} from "@src/weaviate/generative";

const brainstormId = Astro.params.id as string;

const brainstormExists = await getBrainstormWithMessagesById({ brainstormId });
if (!brainstormExists) {
    return new Response("Not found", { status: 404 });
}

let actionStatus = "";

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    const action = formData.get("form-action") as string;

    if (action === "add-user-message") {
        const message = formData.get("message") as string;
        await createBrainstormMessage({
            brainstormId,
            content: message,
            role: "user",
        });
        actionStatus = "Added new user message.";
    }

    if (action === "get-coach-message") {
        const contextSource = formData.get("context-source");

        const coachResponse = await getNewCoachMessageForBrainstorm({
            brainstormId,
            contextSource,
        });

        await createBrainstormMessage({
            brainstormId,
            content: coachResponse.coachMessage,
            role: "assistant",
        });

        actionStatus =
            "Added new coach message. Prompt: " + coachResponse.coachPrompt;
    }

    if (action === "generate-summary") {
        const summaryResponse = await generateSummaryForBrainstorm({
            brainstormId,
        });
        await updateBrainstormSummary({
            brainstormId,
            summary: summaryResponse.summary,
        });
        actionStatus =
            "Generated summary. Prompt: " + summaryResponse.summaryPrompt;
    }

    if (action === "get-relevant-context") {
        const brainstormMessageId = formData.get("message-id") as string;
        const relevantContext =
            await getRelevantContextFromSimilarBrainstormMessages({
                brainstormMessageId,
            });
        actionStatus = "Relevant context for message: " + relevantContext;
    }

    if (action === "delete-message-and-newer") {
        const brainstormMessageId = formData.get("message-id") as string;
        await deleteMessageAndNewer({
            brainstormId,
            brainstormMessageId,
        });
        actionStatus = "Messages deleted";
    }

    if (action === "delete-brainstorm") {
        await deleteBrainstorm({
            brainstormId,
        });

        return Astro.redirect("/");
    }
}

const brainstorm = await getBrainstormWithMessagesById({ brainstormId });
const messages = brainstorm.hasMessages;
---

<Layout title={`Brainstorm: ${brainstorm.title}`}>
    <p><a href="/">Back to all brainstorms</a></p>
    {actionStatus && <p class="status">{actionStatus}</p>}
    <h2>Summary</h2>
    {brainstorm.summary && <pre>{brainstorm.summary}</pre>}
    <form method="POST">
        <button name="form-action" value="generate-summary"
            >Generate summary</button
        >
        <button name="form-action" value="delete-brainstorm"
            >Delete brainstorm</button
        >
    </form>
    <h2>Transcript</h2>
    <ul class="messages-list">
        {
            messages?.map((message) => (
                <li class="message">
                    <strong>{message.role}</strong>: {message.content}
                    <form method="POST" class="message-buttons">
                        <input
                            type="hidden"
                            name="message-id"
                            value={message._additional.id}
                        />
                        <button name="form-action" value="get-relevant-context">
                            Lookup context
                        </button>
                        <button
                            name="form-action"
                            value="delete-message-and-newer"
                        >
                            Delete message and newer
                        </button>
                    </form>
                </li>
            ))
        }
    </ul>
    <h2>Get a new coach message</h2>
    <form method="POST">
        <fieldset>
            <legend>Use relevant context</legend>
            <input
                type="radio"
                name="context-source"
                id="no-context-radio"
                value=""
                checked=""
            />
            <label for="no-context-radio">Do not lookup context</label>
            <input
                type="radio"
                name="context-source"
                id="brainstorm-message-radio"
                value="brainstormMessage"
            />
            <label for="brainstorm-message-radio">Similar messages</label>
            <input
                type="radio"
                name="context-source"
                id="brainstorm-summary-radio"
                value="brainstorm"
            />
            <label for="brainstorm-summary-radio"
                >Similar brainstorm summaries</label
            >
        </fieldset>
        <button name="form-action" value="get-coach-message"
            >Get coach message</button
        >
    </form>
    <h2>Send a new message</h2>
    <form method="POST">
        <label for="message-input">Message</label>
        <textarea name="message" id="message-input"></textarea>
        <button name="form-action" value="add-user-message" type="submit"
            >Send</button
        >
    </form>
</Layout>

<style>
    textarea {
        width: 100%;
        height: 100px;
    }

    pre {
        white-space: pre-wrap;
    }

    .status {
        background-color: lightgreen;
        padding: 1rem;
    }

    .message {
        margin-bottom: 1rem;
    }

    .message-buttons {
        display: flex;
        gap: 1rem;
        margin: 0.5rem 0;
    }
</style>
